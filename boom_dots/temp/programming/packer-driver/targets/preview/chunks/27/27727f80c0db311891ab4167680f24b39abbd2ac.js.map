{"version":3,"sources":["file:///G:/code/cocos%E7%BB%83%E4%B9%A0/explosionPoint/assets/scripts/game.ts"],"names":["_decorator","Component","director","Input","input","Node","ParticleSystem2D","Sprite","tween","UITransform","v3","view","ccclass","property","NewComponent","type","height","fireStatus","fallSlowly","start","placePlayer","on","EventType","TOUCH_START","fire","onDestroy","off","update","deltaTime","getVisibleSize","console","log","playerNode","setPosition","to","position","getComponent","contentSize","y","call","die","stop","tweenDuration","onComplete","active","boom","color","scheduleOnce","newNode1","boomNode","parent","loadScene","pos","particle","undefined","startColor"],"mappings":"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","sourcesContent":["import { _decorator, Color, Component, director, find, Input, input, Node, ParticleSystem, ParticleSystem2D, Sprite, sys, Tween, tween, TweenAction, TweenSystem, UITransform, v3, Vec3, view } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('NewComponent')\nexport class NewComponent extends Component {\n    // 绑定玩家节点\n    @property({type: Node})\n    playerNode: Node = null\n    @property({type: Node})\n    boomNode: Node = null\n    height: number = 0\n    fireStatus: boolean = false\n    fallSlowly: Tween<Node> = null\n\n    start() {\n        this.placePlayer()\n        this.fireStatus = false\n        // 绑定点击事件\n        input.on(Input.EventType.TOUCH_START, this.fire, this);\n    }\n    // 销毁绑定事件\n    onDestroy () {\n        input.off(Input.EventType.TOUCH_START, this.fire, this);\n    }\n    update(deltaTime: number) {\n        \n    }\n\n    placePlayer(){\n        // 获取屏幕可见区域的宽高\n        this.height = view.getVisibleSize().height\n        console.log(this.height,\"高度\")\n        this.playerNode.setPosition(v3(0,-this.height/4))\n\n        // 如果10s之后玩家还没有操作，那么英雄掉落，游戏结束\n        this.fallSlowly = tween(this.playerNode).to(10,{\n            position:v3(0,-this.height/2+this.playerNode.getComponent(UITransform).contentSize.y)\n        }).call(()=>{\n            this.die()\n        }).start()\n    }\n\n    // 发射\n    fire(){\n        if(this.fireStatus) return\n        this.fireStatus = true\n        // 停止掉落动画\n        this.fallSlowly.stop()\n        let tweenDuration = 0.6\n        tween(this.playerNode).to(tweenDuration,{\n            position:v3(0,this.height/2)\n        },{\n            onComplete:()=>{\n                this.die()\n            }\n        }).start()\n    }\n\n    die(){\n        console.log('游戏结束!!!')\n        this.playerNode.active = false\n        this.boom(this.playerNode.position,this.playerNode.getComponent(Sprite).color)\n        // 延时1s后执行,且只执行一次\n        // 重新加载游戏场景，游戏重新开始\n        this.scheduleOnce(()=> {\n            // 重新绑定需要保留的节点\n            const newNode1 = this.boomNode\n            // sys.localStorage.setItem(\"node\",newNode1)\n            console.log(newNode1)\n            console.log(\"新绑定的节点\")\n                // 进行节点绑定的判断和处理\n            if (newNode1 && this.boomNode) {\n                this.boomNode.parent = newNode1.parent;\n                this.boomNode.position = newNode1.position;\n            }\n            director.loadScene('game')\n        }, 1)\n    }\n\n    // 爆炸操作\n    boom(pos: Vec3,color: Color){\n        console.log(this.boomNode + \"boomnode\")\n        this.boomNode.setPosition(pos)\n        let particle = this.boomNode.getComponent(ParticleSystem2D)\n        if(color !== undefined){\n            particle.startColor = color\n        }\n        this.boomNode.active = true\n        // particle.resetSystem()\n        console.log('爆炸了')\n    }\n}\n\n"]}